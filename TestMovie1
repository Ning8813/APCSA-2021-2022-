
/**
 * Demonstrating the Insertions method through
 * sorting the movies.
 *
 * @author Josephine Chun
 * @version 20 Apr 2022
 */
 public class TestMovie1 
{
    public static void main(String [] args)
    {
        Movie [] myMovies = 
        {       new Movie ("Mulan Special Edition", 2004, "Disney"), //1
            new Movie ("Ready Player One", 2018, "Warner Bros"), //2
            new Movie ("Ironman", 2008, "Marvel"), //3
            new Movie ("The Matrix", 1999, "The Wachowskis"), //4
            new Movie ("Spiderman: Homecoming", 2017, "Marvel"), //5
            new Movie ("La La Land", 2016, "Lionsgate"), //6
            new Movie ("Wonder Woman 1984", 2021, "Warner Bros"), //7
            new Movie ("Inception", 2010, "Warner Bros"), //8
            new Movie ("Zootpoia", 2016, "Disney"), //9
            new Movie ("Frozen", 2013, "Disney"), //10
            new Movie ("Big Hero 6", 2014, "Disney")}; //11
          
            System.out.println();
        System.out.println("Before Sorting:");
        printMovies(myMovies);
        System.out.println();
        System.out.println("Sorted by Title - ascending:");
            sortTitles(myMovies, 1);
                printMovies(myMovies);
        System.out.println();
        System.out.println("Sorted by Year - descending:");
            sortYears(myMovies, 2);
            printMovies(myMovies);
        System.out.println();
        System.out.println("Sorted by Studio - ascending:");
            sortStudios(myMovies, 1);
            printMovies(myMovies);
    }

    /**
     * Traverses array and prints each element
     *
     * @param movies
     *            array to print
     */
    public static void printMovies(Movie[] movies) {
        for (Movie m : movies)
            System.out.println(m);
    }

    /**
     * Uses an insertion sort to sort a Movie2 array by title
     *
     * @param src
     *            original array
     * @param order
     *            1 for ascending and 2 for descending
     * @return sorted array
     */
    public static Movie[] sortTitles(Movie[] source, int order) {

        Movie[] dest = new Movie[source.length];
        if (order == 1) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getTitle().compareTo(dest[k - 1].getTitle()) > 0) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else if (order == 2) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getTitle().compareTo(dest[k - 1].getTitle()) < 0) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else {
            System.out.println("Please enter a valid order number!");
        }
        return dest;
    }

    /**
     * Uses an insertion sort to sort a Movie2 array by year
     *
     * @param src
     *            original array
     * @param order
     *            1 for ascending and 2 for descending
     * @return sorted array
     */
    public static Movie[] sortYears(Movie[] source, int order) {

        Movie[] dest = new Movie[source.length];
        if (order == 1) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getYear() > dest[k - 1].getYear()) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else if (order == 2) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getYear() < dest[k - 1].getYear()) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else {
            System.out.println("Please enter a valid order number!");
        }
        return dest;
    }

    /**
     * Uses an insertion sort to sort a Movie2 array by studio
     *
     * @param src
     *            original array
     * @param order
     *            1 for ascending and 2 for descending
     * @return sorted array
     */
    public static Movie[] sortStudios(Movie[] source, int order) {

        Movie[] dest = new Movie[source.length];
        if (order == 1) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getStudio().compareTo(dest[k - 1].getStudio()) > 0) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else if (order == 2) {
            for (int i = 0; i < source.length; i++) {
                Movie next = source[i];
                int insertindex = 0;
                int k = i;
                while (k > 0 && insertindex == 0) {
                    if (next.getStudio().compareTo(dest[k - 1].getStudio()) < 0) {
                        insertindex = k;
                    }
                    else {
                        dest[k] = dest[k - 1];
                    }
                    k--;
                }

                dest[insertindex] = next;
            }
            return dest;
        }
        else {
            System.out.println("Please enter a valid order number!");
        }
        return dest;
    }
}
